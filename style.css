/*
 * This CSS file combines styles from MediaPipe and Three.js
 * to create a seamless augmented reality experience.
 */

/* -------------------------------------------------------------------------- */
/* General Body and Font Styles                                              */
/* -------------------------------------------------------------------------- */
body {
    font-family: roboto, helvetica, arial, sans-serif;
    margin: 2em;
    color: #3d3d3d;
    /* Using MediaPipe's color theme */
    --mdc-theme-primary: #302047;
    --mdc-theme-on-primary: #f1f3f4;
}

h1 {
    color: #3a008b;
    font-style: italic;
}

h2 {
    clear: both;
}

em {
    font-weight: bold;
}

section {
    opacity: 1;
    transition: opacity 500ms ease-in-out;
}

.removed {
    display: none;
}

.invisible {
    opacity: 0.2;
}

.note {
    font-style: italic;
    font-size: 130%;
}

/* -------------------------------------------------------------------------- */
/* AR Container and Layering                                                 */
/* -------------------------------------------------------------------------- */

/* Main container for the AR view (video + canvases) */
#ar-container {
    position: relative;
    /* Adjust width/height as needed, but they should match the video's aspect ratio */
    width: 480px; 
    height: 360px;
    margin: 0 auto; /* Center the container */
}

/* Three.js and MediaPipe canvases, along with the video, should fill the container */
#webcam,
#output_canvas,
#threejs_canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

/* This is the core of the AR layering. Three.js must be on top. */
#webcam {
    z-index: 0; /* Base layer */
    transform: rotateY(180deg);
    -webkit-transform: rotateY(180deg);
    -moz-transform: rotateY(180deg);
}

#output_canvas {
    z-index: 1; /* MediaPipe landmarks layer */
    transform: rotateY(180deg);
    -webkit-transform: rotateY(180deg);
    -moz-transform: rotateY(180deg);
}

#threejs_canvas {
    z-index: 2; /* Three.js 3D objects on the top layer */
    pointer-events: none; /* Allows mouse events to pass through */
    border: 5px solid #302047;
    height: fit-content;
    width: 50px;
}

/* -------------------------------------------------------------------------- */
/* Styling for Other UI Elements                                             */
/* -------------------------------------------------------------------------- */

/* Adjust the button and video sizes */
#liveView {
    display: flex;
    flex-direction: column;
    align-items: center;
}

#webcamButton {
    margin-top: 1em; /* Adjust margin for spacing */
}

.videoView,
.detectOnClick,
.blend-shapes {
    position: relative;
    float: left;
    width: 100%;
    margin: 0%;
    cursor: pointer;
}

.videoView p,
.detectOnClick p {
    position: absolute;
    padding: 5px;
    background-color: #007f8b;
    color: #fff;
    border: 1px dashed rgba(255, 255, 255, 0.7);
    z-index: 2;
    font-size: 12px;
    margin: 0;
}

.highlighter {
    background: rgba(0, 255, 0, 0.25);
    border: 1px dashed #fff;
    z-index: 1;
    position: absolute;
}

.canvas {
    z-index: 1;
    position: absolute;
    pointer-events: none;
}

.detectOnClick {
    z-index: 0;
}

.detectOnClick img {
    width: 100%;
}


/* -------------------------------------------------------------------------- */
/* Responsive Design Adjustments                                             */
/* -------------------------------------------------------------------------- */
@media (max-width: 768px) {
    .videoView,
    .detectOnClick,
  /*  .blend-shapes {
        width: 98%;
        float: none;
    } */
    #ar-container {
        width: 100%;
        height: auto;
    }
}